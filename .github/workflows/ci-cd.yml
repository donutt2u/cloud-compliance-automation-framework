name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety  # Install security tools

    - name: Lint and Format Check
      run: |
        make lint
        make format -- --check # Use --check to fail on unformatted code

    - name: Security Scan
      run: make security-scan

    - name: Run Tests with Coverage
      run: |
        mkdir -p test-logs
        pytest tests/ -v --tb=short --junitxml=test-logs/results.xml | tee test-logs/pytest.log
      continue-on-error: true

    - name: Upload Test Logs and Samples (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          test-logs/
          data/samples/
